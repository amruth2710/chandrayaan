/* ------------------------------------ */
/*         Custom properties            */
/* ------------------------------------ */

:root {
  /* colors */
  --clr-hsl-dark: 230 35% 7%;
  --clr-hsl-light: 231 77% 90%;
  --clr-hsl-white: 0 0% 100%;
  --clr-rgb-dark: 11 13 23;
  --clr-rgb-light: 208 214 249;
  --clr-rgb-white: 255 255 255;
  
  /* font-size */
  --fs-900: clamp(5rem, 10vw + 1rem, 9.375rem);
  --fs-800: 3.5rem;
  --fs-700: 1.5rem;
  --fs-600: 1rem;
  --fs-500: 1rem;
  --fs-400: 0.9375rem;
  --fs-300: 1rem;
  --fs-200: 0.875rem;

  /* font-families */
  --ff-serif: "Bellefair", serif;
  --ff-sans-cond: "Barlow Condensed", sans-serif;
  --ff-sans-normal: "Barlow", sans-serif;
}

@media (min-width: 35rem) {
  :root {
      /* font-size */

    --fs-800: 5rem;
    --fs-700: 2.5rem;
    --fs-600: 1.5rem;
    --fs-500: 1.25rem;
    --fs-400: 1rem;
  }
}

@media (min-width: 45rem) {
  :root {
      /* font-size */
    --fs-800: 6.25rem;
    --fs-700: 3.5rem;
    --fs-600: 2rem;
    --fs-500: 1.75rem;
    --fs-400: 1.125rem;
  }
}



/* ------------------------------------ */
/*               RESET                  */
/* ------------------------------------ */

/* https://piccalil.li/blog/a-modern-css-reset/ */





/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
body, h1, h2, h3, h4, p, figure, blockquote, dl, 
dd {
  margin: 0;
}

/* Keep all non-bold */
h1, h2, h3, h4, h5, h6, p { font-weight: 400; }

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body {
  font-family: var(--ff-sans-normal);
  font-size: var(--fs-400);
  background-color: hsl(var(--clr-hsl-dark));
  color: hsl(var(--clr-hsl-white));
  line-height: 1.5;
  min-height: 100vh;

  display: grid;
  grid-template-rows: min-content 1fr;

  overflow-x: hidden;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Make the HTML hidden property work */
[hidden] {
  display: none;
}

/* make forms easier to work with */
input, button, textarea, select {
  font: inherit;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
   scroll-behavior: auto;
  }
  
  *, *::before, *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}


/* ------------------------------------ */
/*            Utility classes           */
/* ------------------------------------ */


/* general */

.flex {
  display: flex;
  gap: var(--gap, 1rem);
}

.grid {
  display: grid;
  gap: var(--gap, 1rem);
}

.d-block {
  display: block;
}

.flow > *:where(:not(:first-child)) {
  margin-top: var(--flow-space, 1rem);
}

.flow--space-small {
  --flow-space: .5rem;
}

.container {
  padding-inline: 2em;
  margin-inline: auto;
  max-width: 80rem;
}

.sr-only { /* screen reader only */
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0); /*dont really understand what these new properties are */
  white-space: nowrap; /* added line */ /* ?? what is this */
  border: 0;
}

.skip-to-content {
  position: absolute;
  z-index: 9999;
  background-color: hsl( var(--clr-hsl-white) );
  color: hsl( var(--clr-hsl-dark) );
  padding: .5rem 1em;
  margin-inline: auto;
  transform: translateY(-100%);
  transition: transform 250ms ease-in;
}

.skip-to-content:focus {
  transform: translateY(0);
}


/* colors */
.sm-bg-dark { background-color: hsl( var(--clr-hsl-light) / .25 );}
.bg-dark { background-color: hsl( var(--clr-hsl-dark) ); }
.bg-dark--transparent { background-color: hsl( var(--clr-hsl-dark) .1 ); }
.bg-accent { background-color: hsl( var(--clr-hsl-light) ); }
.bg-white { background-color: hsl( var(--clr-hsl-white) ); }

.text-dark { color: hsl( var(--clr-hsl-dark) ); }
.text-accent { color: hsl( var(--clr-hsl-light) ); }
.text-white { color: hsl( var(--clr-hsl-white) ); }

/* typography */

.ff-serif { font-family: var(--ff-serif); }
.ff-sans-cond { font-family: var(--ff-sans-cond); }
.ff-sans-normal { font-family: var(--ff-sans-normal); }

.letter-spacing-1 { letter-spacing: 4.75px; }
.letter-spacing-2 { letter-spacing: 2.7px; }
.letter-spacing-3 { letter-spacing: 2.35px; }

.uppercase { text-transform: uppercase; }

.fs-900 { font-size: var(--fs-900); }
.fs-800 { font-size: var(--fs-800); }
.fs-700 { font-size: var(--fs-700); }
.fs-600 { font-size: var(--fs-600); }
.fs-500 { font-size: var(--fs-500); }
.fs-400 { font-size: var(--fs-400); }
.fs-300 { font-size: var(--fs-300); }
.fs-200 { font-size: var(--fs-200); }

.fs-900, .fs-800, .fs-700, .fs-600 {
  line-height: 1.1;
}


.numbered-title {
  font-family: var(--ff-sans-cond);
  font-size: var(--fs-500);
  text-transform: uppercase;
  letter-spacing: 4.75px;
  /* color: hsl( var(--clr-hsl-light)/.2 ); */
}

.numbered-title span {
  color: hsl(var(--clr-hsl-light) / 0.25);
  margin-right: 0.5em;
  font-weight: 700;
}

/* ------------------------------------ */
/*         Components classes           */
/* ------------------------------------ */

.large-button {
  font-size: 2rem;
  position: relative;
  display: inline-grid;
  z-index: 1;
  align-items: center;
  border-radius: 50%;
  padding: 0 2em;
  aspect-ratio: 1;
  text-decoration: none;
}

.large-button::after {
  content: '';
  position: absolute;
  z-index: -1;
  background-color: hsl( var(--clr-hsl-white) / .15);
  /* width: 100%; */
  /* height: 100%; */
  inset: 0; /* makes it same as width and height right above */
  border-radius: inherit; /* matches the parent above 50% */
  transition: opacity 500ms linear, transform 750ms ease-in-out;
  opacity: 0;
}

.large-button:hover::after, .large-button:focus::after {
  transform: scale(1.5);
  opacity: 1;
}

/* primary-header */

.logo {
  margin: 1rem clamp(1.5rem, 5vw, 3.5rem);
  /* margin: 2rem clamp(1.5rem, 5vw, 3.5rem); */
}

.primary-header {
  justify-content: space-between;
  align-items: center;
}

.primary-navigation {
  --gap: clamp(1.5rem, 5vw, 3.5rem);
  --underline-gap: 2rem;
  list-style: none;
  padding: 0;
  margin: 0;
  background-color: hsl( var(--clr-hsl-dark) / 0.95 );
  /* backdrop-filter: blur(1.5rem); */
}

.primary-navigation a {
  text-decoration: none;
}

.primary-navigation a > span {
  font-weight: 700;
  margin-right: 1em;
}

@supports (backdrop-filter: blur(1.5rem)) {
  .primary-navigation {
    background-color: hsl( var(--clr-hsl-white) 1);
    backdrop-filter: blur(1.5rem);
  }
}

.mobile-nav-toggle {
  display: none;
}

@media (max-width: 35rem) {
  .primary-navigation {
    --underline-gap: .5rem;
    position: fixed;
    z-index: 1000;
    inset: 0 0 0 30%; /* same as top right bottom left use for position fix,absolute,relative*/
    list-style: none;
    padding: min(20rem, 15vh) 2rem;
    margin: 0;
    flex-direction: column;
    transform: translateX(100%);
    transition: transform 500ms ease-in-out;
  }

  .primary-navigation[data-visible="true"] {
    transform: translateX(0);
  }

  .primary-navigation.underline-indicators > .active {
    border: 0;
  }

  .mobile-nav-toggle {
    display: block;
    position: absolute;
    z-index: 2000;
    right: 1rem;
    top: 2rem;
    background: transparent;
    background-image: url(./assets/shared/icon-hamburger.svg);
    background-repeat: no-repeat;
    background-position: center;
    width: 1.5rem;
    aspect-ratio: 1; /* makes it a square same as having height: 1.5rem here */
    /* height: 1.5rem; */
    border: 0;
  }

  .mobile-nav-toggle[aria-expanded="true"] {
    background-image: url(./assets/shared/icon-close.svg);
  }

  .mobile-nav-toggle:focus-visible {
    outline: 5px solid hsl( var(--clr-hsl-white) );
    outline-offset: 5px;
  }
}

@media (min-width: 35em) {
  .primary-navigation {
    /* padding: 0 clamp(3rem, 10vw, 7rem); */
    padding-inline: clamp(1rem, 3vw, 2rem); /* seems to work better for me */
  }
}

@media (min-width: 35em) and (max-width: 44.999em) {
  .primary-navigation a > span {
    display: none;
  }
}

@media (min-width: 45rem) {
  .primary-header {
    margin-left: -3rem;
  }

  .primary-header::after {
    content: '';
    display: block;
    position: relative;
    height: 1px;
    margin-right: -3rem;
    background-color: hsl( var(--clr-hsl-white) / .25);
    width: 100%;
    order: 1;
  }

  nav {
    order: 2;
  }

  .primary-navigation {
    margin-block: 2rem;
  }
}

.underline-indicators > * {
  cursor: pointer;
  padding: var(--underline-gap, 1rem) 0;
  border: 0;
  border-bottom: .2rem solid hsl( var(--clr-hsl-white) );
  background-color: transparent;
}

.underline-indicators > * {
  cursor: pointer;
  padding: var(--underline-gap, 1rem) 0;
  border: 0;
  border-bottom: .2rem solid hsl( var(--clr-hsl-white) / 0);
}

.underline-indicators > *:hover,
.underline-indicators > *:focus {
  border-color: hsl(var(--clr-hsl-white) / 0.5);
}

.underline-indicators > .active,
.underline-indicators > [aria-selected="true"] {
  color: hsl(var(--clr-hsl-white) / 1);
  border-color: hsl(var(--clr-hsl-white) / 1);
}

.tab-list {
  --gap: 2rem;
}

.dot-indicators > * {
  cursor: pointer;
  border: 0;
  border-radius: 50%;
  aspect-ratio: 1;
  padding: .5em;
  background-color: hsl( var(--clr-hsl-white) / .25);
}

.dot-indicators > *:hover,
.dot-indicators > *:focus {
  background-color: hsl( var(--clr-hsl-white) / .5);
}

.dot-indicators > [aria-selected="true"] {
  background-color: hsl(var(--clr-hsl-white) / 1);
}

.number-indicators > * {
  cursor: pointer;
  border: .1em solid hsl( var(--clr-hsl-white) / .25 );
  border-radius: 50%;
  width: 4rem;
  height: 4rem;
  padding: .2rem;
  margin: .2rem;
}

.number-indicators > *:hover,
.number-indicators > *:focus {
  border-color: hsl( var(--clr-hsl-white) / .5);
}

.number-indicators > [aria-selected="true"] {
  background-color: hsl(var(--clr-hsl-white) / 1);
  color:hsl( var(--clr-hsl-dark) / 1 );
  border-color: hsl( var(--clr-hsl-white) / 1);
}


/* ------------------------------------ */
/*       Page Specific background       */
/* ------------------------------------ */

/* All pages body style */

body {
  background-size: cover;
  background-position: bottom center;
}

video {  
  width: 100vw;
  height: 100vh;
  object-fit: cover;
  position: fixed;
  top: 0;
  left: 0;
  z-index: -1;
}
/* home page */

.home {
  background-image: url(./assets/home/background-home-mobile.jpg);
}

@media (min-width: 35rem) {
  .home {
    background-position: center center;
    background-image: url(./assets/home/background-home-tablet.jpg);
  }
}

@media (min-width: 45rem) {
  .home {
    background-image: url(./assets/home/background-home-desktop.jpg);
  }
}

/* destination page */

.destination {
  background-image: url(./assets/destination/background-destination-mobile.jpg);
}

@media (min-width: 35rem) {
  .destination {
    background-image: url(./assets/destination/background-destination-tablet.jpg);
  }
}

@media (min-width: 45rem) {
  .destination {
    background-image: url(./assets/destination/background-destination-desktop.jpg);
  }
}

/* crew page */

.crew {
  background-image: url(./assets/crew/background-crew-mobile.jpg);
}

@media (min-width: 35rem) {
  .crew {
    background-image: url(./assets/crew/background-crew-tablet.jpg);
  }
}

@media (min-width: 45rem) {
  .crew {
    background-image: url(./assets/crew/background-crew-desktop.jpg);
  }
}

/* technology page */

.technology {
  background-image: url(./assets/technology/background-technology-mobile.jpg);
}

@media (min-width: 35rem) {
  .technology {
    background-image: url(./assets/technology/background-technology-tablet.jpg);
  }
}

@media (min-width: 45rem) {
  .technology {
    background-image: url(./assets/technology/background-technology-desktop.jpg);
  }
}

/* ------------------------------------ */
/*                Layout                */
/* ------------------------------------ */


.grid-container {
  display: grid;
  text-align: center;
  place-items: center;
  padding: 0 1rem;
  padding-bottom: 3rem;
}

.grid-container p:not([class]) {
  max-width: 80ch;
}

.numbered-title {
  grid-area: title;
}

/* distination layout */

.grid-container--destination {
  grid-template-areas: 
    'title'
    'image'
    'tabs'
    'content';
  /* gap: 2rem 0; */ /* see utility class flow it has "margin-top: var(--flow-space, 1rem);" so that does it! */
  --flow-space: 2rem; /* just to increase the space with our made up var of --flow-space! */
}

.grid-container--destination picture {
  grid-area: image;
  max-width: 60%;
  align-self: flex-start;
}

.grid-container--destination > .tab-list {
  grid-area: tabs;
}

.grid-container--destination > .destination-info {
  grid-area: content;
}

.destination-meta {
  flex-direction: column;
  justify-content: space-between;
  border-top: 1px solid hsl( var(--clr-hsl-white) / .1 );
  padding-top: 2.5rem;
  margin-top: 2.5rem;
}

.destination-meta p {
  font-size: 1.75rem;
}

/* crew layout */

.grid-container--crew {
  grid-template-areas: 
    'title'
    'image'
    'dots'
    'content';
  --flow-space: 2rem;
}

.grid-container--crew picture {
  grid-area: image;
  max-width: 60%;
  border-bottom: 1px solid hsl( var(--clr-hsl-white) / .1 );
}

.grid-container--crew .dot-indicators {
  grid-area: dots;
}

.grid-container--crew .crew-info {
  grid-area: content;
}

.crew-info h2 {
  color: hsl( var(--clr-hsl-white) / .5);
  /* or */
  /* opacity: .5; */
}

/* technology layout */

.grid-container--technology {
  grid-template-areas: 
    '. title title .'
    'image image image image' 
    '. numbers numbers .'
    '. content content .'
  ;
  --flow-space: 2rem;
}

.grid-container--technology picture {
  grid-area: image;
  /* max-width: 100%; */
  border-bottom: 1px solid hsl( var(--clr-hsl-white) / .1 );
  /* do more work! */
}

.grid-container--technology .number-indicators {
  grid-area: numbers;
  display: flex;
}

.grid-container--technology .technology-info {
  grid-area: content;
}
.grid-container.grid-container--technology {
  width: 100vw;
}

@media (min-width: 35rem) {
  .numbered-title {
    justify-self: flex-start;
    margin-top: 2rem;
  }

  .destination-meta {
    flex-direction: row;
    justify-content: space-evenly;
  }

  .grid-container--crew {
    grid-template-areas: 
      'title'
      'content'
      'dots'
      'image'
    ;
    padding-bottom: 0;
  }

  .grid-container--crew picture {
    max-width: 100%;
  }
}


@media (min-width: 45rem) {

  .grid-container {
    text-align: left;
    grid-template-columns: minmax(2em, 1fr) repeat(2, minmax(0, 40rem)) minmax(2em, 1fr);
    column-gap: var(--container-gap, 2rem);  
  }

  .grid-container.grid-container--technology {
    text-align: left;
    grid-template-columns: minmax(2em, 1fr) minmax(0, 5rem) minmax(0, 33rem) minmax(0, 50rem) minmax(2em, 1fr);
  }

  .grid-container--home {
    padding-bottom: max(4rem, 32vh);
    align-items: flex-end;
  }

  .grid-container--home > *:first-child {
    grid-column: 2;
  }
  
  .grid-container--home > *:last-child {
    grid-column: 3;
  }

  .grid-container--destination {
    justify-items: flex-start;
    align-content: flex-start;
    grid-template-areas: 
      '. title title .'
      '. image tabs .'
      '. image content .';
    /*gap: 2rem 0; */ /* see utility class flow it has "margin-top: var(--flow-space, 1rem);" so that does it! */
    --flow-space: 2rem; /* just to increase the space with our made up var of --flow-space! */
  }

  .grid-container--destination picture {
    max-width: 90%;
  }

  .destination-meta {
    --gap: min(8vw, 6rem);
    justify-content: flex-start;    
  }

  .grid-container--crew {
    grid-template-columns: minmax(2em, 1fr) minmax(0, 50rem) minmax(0, 30rem) minmax(2em, 1fr);
    grid-template-areas: 
      '. title image .'
      '. content image .'
      '. dots image .'
    ;
  }

  .grid-container--crew > .dot-indicators {
    justify-self: flex-start;
  }

  .grid-container--crew > picture {
    grid-column: span 2;
    align-self: flex-end;
    max-width: 100%;
  }

  .grid-container--technology {
    grid-template-areas: 
      '. title title . .'
      '. numbers content image .' 
      '. numbers content image .'
    ;
    justify-content: start;
    --flow-space: 0rem;
  }

  .grid-container--technology .number-indicators {
    display: grid;
    /* --container-gap: 0; */
    justify-self: start;
  }

  .grid-container--technology picture {
    grid-column: 4 / 6; /* spans 2 towards the end so span -1 */
    justify-self: end;
  }

  .grid-container--technology > .technology-info {
    justify-self: start;
  }
}
